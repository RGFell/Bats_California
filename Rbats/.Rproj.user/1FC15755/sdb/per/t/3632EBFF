{
    "contents" : "---\noutput: word_document\n---\n\n#Sampling Design\n###author: Derek Corcoran\n####Last update: `r Sys.Date() `\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(cache=TRUE)\n```\n\nFirst we load the spatial packages\n\n```{r}\nlibrary(\"raster\", lib.loc=\"~/R/win-library/3.2\")\nlibrary(\"rasterVis\", lib.loc=\"~/R/win-library/3.2\")\nlibrary(\"maps\", lib.loc=\"~/R/win-library/3.2\")\nlibrary(\"maptools\", lib.loc=\"~/R/win-library/3.2\")\nlibrary(\"rgdal\", lib.loc=\"~/R/win-library/3.2\")\n```\nread rasters\n\n```{r}\nbc <- readGDAL(\"C:/Users/usuario/Bats_California/layers/burn_canopy.asc\")\nbc<-raster (bc)\nplot(bc)\nbb <- readGDAL(\"C:/Users/usuario/Bats_California/layers/burn_basal.asc\")\nbb<-raster (bb)\nplot(bb)\nbs <- readGDAL(\"C:/Users/usuario/Bats_California/layers/burn_severity.asc\")\nbs<-raster (bs)\nplot(bs)\ntopo <- readGDAL(\"C:/Users/usuario/Bats_California/layers/plumastopo.asc\")\ntopo<-raster (topo)\nplot(topo)\nsummary(bs)\n```\n\n#Change outlayers and extract NAs \n\nIn order to classify the raster we will get rid of unnecesary outlayers, and change NAs to 0\n\n```{r}\ndf.bb <- data.frame(id=c(NA,1,2,3,4,5,6,7,255), v=c(0,1,2,3,4,5,6,7,8))\nbb <- subs(bb, df.bb,subswithNA=FALSE)\ndf.bs <- data.frame(id=c(NA,1,2,3,4,255), v=c(0,1,2,3,4,5))\nbs <- subs(bs, df.bs,subswithNA=FALSE)\ndf.bc <- data.frame(id=c(NA,1,2,3,4,5,255), v=c(0,1,2,3,4,5,6))\nbc <- subs(bc, df.bc,subswithNA=FALSE)\n```\n\n#Check for correlation between rasters\n\n```{r}\nburn <-brick(bc, bs, bb)\nplot (burn)\nlayerStats(burn, \"pearson\",na.rm=TRUE)\n```\n\n#Clasification example\n\nEven though we shouldn't classify using 3 layers of such high classification we will use the RasterBrick of the three burn classifications to exemplify how we will divide the area into areas of similar characteristics.\nHere we will ask R to use kmeans to sort the area into 3 types of habitat using the abovementioned rasterbrick:\n\n```{r, echo=FALSE}\nvaluetable <- getValues(burn)\nhead(valuetable)\nkm <- kmeans(na.omit(valuetable), centers = 3, iter.max = 100, nstart = 10)\n# create a blank raster with default values of 0\nrNA <- setValues(raster(burn), 0)\nfor(i in 1:nlayers(burn)){\n  rNA[is.na(burn[[i]])] <- 1\n}\n# convert rNA to an integer vector\nrNA <- getValues(rNA)\n# convert valuetable to a data.frame\nvaluetable <- as.data.frame(valuetable)\n# if rNA is a 0, assign the cluster value at that position\nvaluetable$class[rNA==0] <- km$cluster\n# if rNA is a 1, assign an NA at that position\nvaluetable$class[rNA==1] <- NA\n# create a blank raster\nclasses <- raster(burn)\n# assign values from the 'class' column of valuetable\nclasses <- setValues(classes, valuetable$class)\nplot(classes, legend=FALSE,col=c(\"dark green\", \"orange\", \"light blue\"))\n```\n\nMore info on how to do this clasification in *https://geoscripting-wur.github.io/AdvancedRasterAnalysis/*",
    "created" : 1430094159914.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3765682311",
    "id" : "3632EBFF",
    "lastKnownWriteTime" : 1430188847,
    "path" : "C:/Users/usuario/Bats_California/Rbats/Sampling Design.Rmd",
    "project_path" : "Sampling Design.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}