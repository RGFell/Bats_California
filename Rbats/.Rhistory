roads.r <- rasterize(roads.v, r, field=1)
summary(roads.r)          # pixels crossed by a road have "1"
plot(roads.r, add=TRUE)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp"verbose=TRUE, proj4string=proy)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE, proj4string=proy)
plot(roads.v)
plot(PNF)
lines(roads.v)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE, proj4string=proy)
plot(PNF)
lines(roads.v)
plot(roads.v)
extent(roads.v)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE, proj4string=proy)
plot(PNF)
lines(roads.v)
proy
PNF
PNF
PNF
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
plot(PNF)
lines(roads.v)
roads.v
pnf
PNF
?rasterise
?rasterize
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
r <- raster(extent(roads.v)) # creates a raster with the extent of sp_df
projection(r) <- proj4string(roads.v) # uses the projection of the shapefile
# for the raster
res(r)=10.0 # sets the resolution of the raster to 10 m
r10 <- rasterize(sp_df, field="ATTRIBUTE", r)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
r <- raster(extent(roads.v)) # creates a raster with the extent of sp_df
projection(r) <- proj4string(roads.v) # uses the projection of the shapefile
# for the raster
res(r)=10.0 # sets the resolution of the raster to 10 m
r10 <- rasterize(roads.v, field="ATTRIBUTE", r)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
r <- raster(extent(roads.v)) # creates a raster with the extent of sp_df
projection(r) <- proj4string(roads.v) # uses the projection of the shapefile
# for the raster
res(r)=10.0 # sets the resolution of the raster to 10 m
r10 <- rasterize(roads.v, field=1, r)
roads.v <- readShapeSpatial("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
r <- raster(extent(roads.v)) # creates a raster with the extent of sp_df
projection(r) <- proj4string(roads.v) # uses the projection of the shapefile
# for the raster
res(r)=100.0 # sets the resolution of the raster to 10 m
r10 <- rasterize(roads.v, field=1, r)
?readOGR
library("rgdal", lib.loc="~/R/win-library/3.2")
roads.v <- readOGR("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
roads.v <- ogrInfo("C:/Users/usuario/Bats_California/layers/Roads.shp",verbose=TRUE)
roads.v <- ogrInfo("C:/Users/usuario/Bats_California/layers/Roads.shp")
ogrInfo("C:/Users/usuario/Bats_California/layers/Roads.shp")
roads.v <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="Roads")
plot(PNF)
lines(roads.v)
extent (PNF)
extent (roads.v)
roads.v
plot(roads.v)
proy<-CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs")
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
plot(PNF)
lines(roads.v)
library("raster", lib.loc="~/R/win-library/3.2")
library("rasterVis", lib.loc="~/R/win-library/3.2")
library("maps", lib.loc="~/R/win-library/3.2")
library("maptools", lib.loc="~/R/win-library/3.2")
library("rgdal", lib.loc="~/R/win-library/3.2")
PNF<- readGDAL("C:/Users/usuario/Bats_California/layers/PNF.asc")
PNF<-raster (PNF)
plot(PNF)
bc <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_canopy.asc")
bc<-raster (bc)
plot(bc)
bb <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_basal.asc")
bb<-raster (bb)
plot(bb)
bs <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_severity.asc")
bs<-raster (bs)
plot(bs)
topo <- readGDAL("C:/Users/usuario/Bats_California/layers/plumastopo.asc")
topo<-raster (topo)
plot(topo)
Vegetation_existing <- readGDAL("C:/Users/usuario/Bats_California/layers/Vegetation_existing.asc")
Vegetation_existing<-raster (Vegetation_existing)
plot(Vegetation_existing)
FireReturnIntervalDeparture <- readGDAL("C:/Users/usuario/Bats_California/layers/FireReturnIntervalDeparture.asc")
FireReturnIntervalDeparture<-raster (FireReturnIntervalDeparture)
plot(FireReturnIntervalDeparture)
TreatmentsStorrie <- readGDAL("C:/Users/usuario/Bats_California/layers/TreatmentsStorrie.asc")
TreatmentsStorrie<-raster (TreatmentsStorrie)
plot(TreatmentsStorrie)
df.bb <- data.frame(id=c(NA,1,2,3,4,5,6,7,255), v=c(0,1,2,3,4,5,6,7,8))
bb1 <- subs(bb, df.bb,subswithNA=FALSE)
df.bs <- data.frame(id=c(NA,1,2,3,4,255), v=c(0,1,2,3,4,5))
bs1 <- subs(bs, df.bs,subswithNA=FALSE)
df.bc <- data.frame(id=c(NA,1,2,3,4,5,255), v=c(0,1,2,3,4,5,6))
bc1 <- subs(bc, df.bc,subswithNA=FALSE)
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
bb<-projectRaster(bb1, PNF)
bs<-projectRaster(bs1, PNF)
Vegetation_existing<-projectRaster(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-projectRaster(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-projectRaster(TreatmentsStorrie, PNF)
bc<-resample(bc, PNF)
bb<-resample(bb, PNF)
bs<-resample(bs, PNF)
Vegetation_existing<-resample(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-resample(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-resample(TreatmentsStorrie, PNF)
topo<-resample(topo,PNF)
bc<-resample(bc, PNF)
bb<-resample(bb, PNF)
bs<-resample(bs, PNF)
Vegetation_existing<-resample(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-resample(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-resample(TreatmentsStorrie, PNF)
topo<-resample(topo,PNF)
plot (topo)
plot (bc)
plot (pnf)
plot (PNF)
PNF<- readGDAL("C:/Users/usuario/Bats_California/layers/PNF.asc")
PNF<-raster (PNF)
plot(PNF)
bc <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_canopy.asc")
bc<-raster (bc)
plot(bc)
bb <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_basal.asc")
bb<-raster (bb)
plot(bb)
bs <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_severity.asc")
bs<-raster (bs)
plot(bs)
topo <- readGDAL("C:/Users/usuario/Bats_California/layers/plumastopo.asc")
topo<-raster (topo)
plot(topo)
Vegetation_existing <- readGDAL("C:/Users/usuario/Bats_California/layers/Vegetation_existing.asc")
Vegetation_existing<-raster (Vegetation_existing)
plot(Vegetation_existing)
FireReturnIntervalDeparture <- readGDAL("C:/Users/usuario/Bats_California/layers/FireReturnIntervalDeparture.asc")
FireReturnIntervalDeparture<-raster (FireReturnIntervalDeparture)
plot(FireReturnIntervalDeparture)
TreatmentsStorrie <- readGDAL("C:/Users/usuario/Bats_California/layers/TreatmentsStorrie.asc")
TreatmentsStorrie<-raster (TreatmentsStorrie)
plot(TreatmentsStorrie)
df.bb <- data.frame(id=c(NA,1,2,3,4,5,6,7,255), v=c(0,1,2,3,4,5,6,7,8))
bb1 <- subs(bb, df.bb,subswithNA=FALSE)
df.bs <- data.frame(id=c(NA,1,2,3,4,255), v=c(0,1,2,3,4,5))
bs1 <- subs(bs, df.bs,subswithNA=FALSE)
df.bc <- data.frame(id=c(NA,1,2,3,4,5,255), v=c(0,1,2,3,4,5,6))
bc1 <- subs(bc, df.bc,subswithNA=FALSE)
bb<-projectRaster(bb1, PNF)
plot(bb)
bs<-projectRaster(bs1, PNF)
FireReturnIntervalDeparture<-projectRaster(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-projectRaster(TreatmentsStorrie, PNF)
bc<-resample(bc, PNF)
Plot(PNF)
plot(PNF)
plot(bc)
bc<-projectRaster(bc1, PNF)
bc<-resample(bc, PNF)
bb<-resample(bb, PNF)
bb<-resample(bb, PNF)
bb<-resample(bb, PNF)
bs<-resample(bs, PNF)
Vegetation_existing<-resample(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-resample(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-resample(TreatmentsStorrie, PNF)
topo<-resample(topo,PNF)
Vegetation_existing<-projectRaster(Vegetation_existing, PNF)
Vegetation_existing<-resample(Vegetation_existing, PNF)
roads.v <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="Roads")
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
plot(PNF)
lines(roads.v)
PNF<- readGDAL("C:/Users/usuario/Bats_California/layers/PNF.asc")
PNF<-raster (PNF)
plot(PNF)
bc <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_canopy.asc")
bc<-raster (bc)
plot(bc)
bb <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_basal.asc")
bb<-raster (bb)
plot(bb)
bs <- readGDAL("C:/Users/usuario/Bats_California/layers/burn_severity.asc")
bs<-raster (bs)
plot(bs)
topo <- readGDAL("C:/Users/usuario/Bats_California/layers/plumastopo.asc")
topo<-raster (topo)
plot(topo)
Vegetation_existing <- readGDAL("C:/Users/usuario/Bats_California/layers/Vegetation_existing.asc")
Vegetation_existing<-raster (Vegetation_existing)
plot(Vegetation_existing)
FireReturnIntervalDeparture <- readGDAL("C:/Users/usuario/Bats_California/layers/FireReturnIntervalDeparture.asc")
FireReturnIntervalDeparture<-raster (FireReturnIntervalDeparture)
plot(FireReturnIntervalDeparture)
TreatmentsStorrie <- readGDAL("C:/Users/usuario/Bats_California/layers/TreatmentsStorrie.asc")
TreatmentsStorrie<-raster (TreatmentsStorrie)
plot(TreatmentsStorrie)
df.bb <- data.frame(id=c(NA,1,2,3,4,5,6,7,255), v=c(0,1,2,3,4,5,6,7,8))
bb1 <- subs(bb, df.bb,subswithNA=FALSE)
df.bs <- data.frame(id=c(NA,1,2,3,4,255), v=c(0,1,2,3,4,5))
bs1 <- subs(bs, df.bs,subswithNA=FALSE)
df.bc <- data.frame(id=c(NA,1,2,3,4,5,255), v=c(0,1,2,3,4,5,6))
bc1 <- subs(bc, df.bc,subswithNA=FALSE)
bb<-projectRaster(bb1, PNF)
bs<-projectRaster(bs1, PNF)
bc<-projectRaster(bc1, PNF)
Vegetation_existing<-projectRaster(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-projectRaster(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-projectRaster(TreatmentsStorrie, PNF)
bc<-resample(bc, PNF)
bb<-resample(bb, PNF)
bs<-resample(bs, PNF)
Vegetation_existing<-resample(Vegetation_existing, PNF)
FireReturnIntervalDeparture<-resample(FireReturnIntervalDeparture, PNF)
TreatmentsStorrie<-resample(TreatmentsStorrie, PNF)
topo<-resample(topo,PNF)
roads.v <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="Roads")
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
plot(PNF)
lines(roads.v)
template <- PNF  # this will be the template
template[] <- NA  # assigns all values as NA
roads.r <- rasterize(roads.v, template, field=1)
summary(roads.r)          # pixels crossed by a road have "1"
plot(roads.r, add=TRUE)
raster.standardize <- function(infile = x, outfile = y){
if(verbose){print(paste("Starting standardize on", infile, "at", Sys.time(), "writing results to", outfile))}
output1 <- file(outfile, "wt")
sum1 <- raster.sum(infile)
con1 <- file(infile, "rt")
while (length(theselines <- readLines(con1, n = maxlines, warn = FALSE)) > 0) {
for(j in 1:length(theselines)){
thisline <- unlist(strsplit(theselines[j], "\\s+", perl=TRUE))
if(length(grep("^[-0123456789]", thisline[1], perl=TRUE)) > 0){  # Line contains numerical data
thisline <- as.numeric(thisline)
thisline[thisline == na.value] <- NA  # Convert na.value to NA
thisline <- thisline/sum1
thisline[is.na(thisline)] <- na.value
#print(thisline)
writeLines(as.character(paste(thisline, collapse = " ")), con=output1)
}
else{
#print (thisline)
writeLines(as.character(paste(thisline, collapse = " ")), con=output1)
}
}
}
close(con1)
close(output1)
return (TRUE)
}
library("raster", lib.loc="~/R/win-library/3.2")
library("rasterVis", lib.loc="~/R/win-library/3.2")
library("rgdal", lib.loc="~/R/win-library/3.2")
library("rgeos", lib.loc="~/R/win-library/3.2")
library("maptools", lib.loc="~/R/win-library/3.2")
library("maps", lib.loc="~/R/win-library/3.2")
raster.standardize(topo, topo.s)
raster.standardize(topo, topo.s, verbose=TRUE)
?norm
?normalize
?normalise
?scale
AllLayers
topo.s<-scale(topo)
topo.s
plot(topo.s)
?scale
rasterRescale<-function(r){
((r-cellStats(r,"min"))/(cellStats(r,"max")-cellStats(r,"min")))
}
- See more at: http://www.timassal.com/?p=859#sthash.LmwUxrqt.dpuf
rasterRescale<-function(r){
((r-cellStats(r,"min"))/(cellStats(r,"max")-cellStats(r,"min")))
}
topo.s<-raserRescale(topo)
rasterRescale<-function(r){
((r-cellStats(r,"min"))/(cellStats(r,"max")-cellStats(r,"min")))
}
topo.s<-rasterRescale(topo)
plot(topo.s)
?rbinom
rbinom(n=30,siza=3,prob=0.8)
rbinom(n=30,size=3,prob=0.8)
rbinom(n=30,size=1,prob=0.8)
rbinom(n=30,size=3,prob=0.6)
rbinom(n=30,size=3,prob=0.6)
install.packages("unmarked")
library("unmarked", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("markdown", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("markdown", lib.loc="~/R/win-library/3.2")
knit('sampling_design2.rmd', 'sampling_design2.md')
plot(lidar.limit)
library("spatstat", lib.loc="~/R/win-library/3.2")
install.packages("splancs")
?ppp
bounding.box
?bounding.box
?density.ppp
library("splancs", lib.loc="~/R/win-library/3.2")
library("knitr", lib.loc="~/R/win-library/3.2")
library("markdown", lib.loc="~/R/win-library/3.2")
knit('Point_data2.rmd', 'Point_data2.md')
library("rgeos", lib.loc="~/R/win-library/3.2")
AllTreesMoon <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="AllTreesMerge")
R_CStackLimit = -1
AllTreesMoon <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="AllTreesMerge")
?R_CStackLimit
library("raster", lib.loc="~/R/win-library/3.2")
?stack
library("raster", lib.loc="~/R/win-library/3.2")
library("rasterVis", lib.loc="~/R/win-library/3.2")
library("maps", lib.loc="~/R/win-library/3.2")
library("maptools", lib.loc="~/R/win-library/3.2")
library("rgdal", lib.loc="~/R/win-library/3.2")
rivers <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="NHDFlowline")
rivers <- spTransform(rivers, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
library("raster", lib.loc="~/R/win-library/3.2")
library("rasterVis", lib.loc="~/R/win-library/3.2")
library("maps", lib.loc="~/R/win-library/3.2")
library("maptools", lib.loc="~/R/win-library/3.2")
library("rgdal", lib.loc="~/R/win-library/3.2")
rivers <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="NHDFlowline")
rivers <- spTransform(rivers, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
rivers
names(rivers)
plot(rivers)
rivers$FTYPE
rivers$FCODE
names(rivers)
rivers$GNIS_ID
names(rivers)
rivers$GNIS_NAME
names(rivers)
summary(rivers$GNIS_NAME)
names(rivers)
summary(rivers$FDATE)
names(rivers)
summary(rivers$RESOLUTION)
summary(rivers$GNIS_ID)
names(rivers)
summary(rivers$GNIS_NAME)
names(rivers)
summary(rivers$LENGTHKM)
summary(rivers$REACHCODE)
summary(rivers$LENGTHKM)
names(rivers)
summary(rivers$FLOWDIR)
names(rivers)
summary(rivers$WBAREA_PER)
names(rivers)
summary(rivers$FTYPE)
names(rivers)
summary(rivers$FCODE)
names(rivers)
summary(rivers$ENABLED)
names(rivers)
summary(rivers$SHAPE_Leng)
plot(rivers$Wildcat Creek)
plot(rivers$GNIS_NAME)
summary(rivers$GNIS_NAME)
plot(rivers[GNIS_NAME == "Freeman Creek"])
rivers[GNIS_NAME == "Freeman Creek"]
rivers[rivers$GNIS_NAME == "Freeman Creek"]
rivers$GNIS_NAME
rivers$GNIS_NAME
plot(rivers[GNIS_NAME == "Freeman Creek"])
plot(rivers["Freeman Creek"]
=
plot(rivers["Freeman Creek"])
plot(rivers, col=GNIS_NAME)
plot(rivers, col=rivers$GNIS_NAME)
library("latticeExtra", lib.loc="~/R/win-library/3.2")
library("raster", lib.loc="~/R/win-library/3.2")
print(points1nf)
?colnames
plot(rivers)
?rep
rep
rep
rep("x", times=5)
rep(x, times=5)
a=rep("x", times=5)
a
str(a)
str(a)
a=rep(x, times=5)
a=rep("x", times=5)
?kable
library("knitr", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
?kable
?resample
?resample
library("raster", lib.loc="~/R/win-library/3.2")
?resample
library("raster", lib.loc="~/R/win-library/3.2")
library("rasterVis", lib.loc="~/R/win-library/3.2")
library("maps", lib.loc="~/R/win-library/3.2")
library("maptools", lib.loc="~/R/win-library/3.2")
library("rgdal", lib.loc="~/R/win-library/3.2")
library("latticeExtra", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
SeralStage <-readGDAL("C:/Users/usuario/Bats_California/layers/SeralStage.asc")
SeralStage<-raster (SeralStage)
SeralStage
summary(SeralStage)
names(SeralStage)
roads.v <- readOGR(dsn="C:/Users/usuario/Bats_California/layers",layer="Roads")
roads.v <- spTransform(roads.v, CRS("+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs"))
roads.v
names(roads.v)
roads.v$RTE_CN
names(roads.v)
roads.v$ID
names(roads.v)
roads.v$BMP
names(roads.v)
roads.v$EMP
names(roads.v)
roads.v$NAME
names(roads.v)
roads.v$BEGIN_TERM
roads.v$END_TERM
names(roads.v)
roads.v$END_TERMIN
names(roads.v)
roads.v$SEG_LENGTH
names(roads.v)
roads.v$ADMIN_ORG
names(roads.v)
roads.v$FUNCTIONAL
roads.v$FUNCTIONAL(ARTERIAL)
roads.v$FUNCTIONAL[ARTERIAL]
plot(roads.v$FUNCTIONAL)
plot(roads.v, col=roads.v$FUNCTIONAL)
plot(roads.v, lty=roads.v$FUNCTIONAL)
plot(roads.v, lw=roads.v$FUNCTIONAL)
roady<-as.SpatialLinesDataFrame(roads.v)
roady<-as.psp.SpatialLinesDataFrame(roads.v)
roady
summay(roady)
summary(roady)
names(roady)
roady$n
roady$ends
names(roady)
roady$marks
roady$markformat
names(roady)
roady$window
plot(roads.v, lw=roads.v$FUNCTIONAL)
plot(roads.v, lty=roads.v$FUNCTIONAL)
plot(roads.v$FUNCTIONAL[ARTERIAL])
roads.v$FUNCTIONAL[ARTERIAL]
roads.v$FUNCTIONAL
roads.v$FUNCTIONAL[A - ARTERIAL]
roads.v$FUNCTIONAL["A - ARTERIAL"]
roads.v$FUNCTIONAL["A - ARTERIAL"]
roads.v$FUNCTIONAL[A - ARTERIAL]
roads.v[A - ARTERIAL]
roads.v["A - ARTERIAL"]
plot(roads.v, col=roads.v$FUNCTIONAL)
names(roads.v)
plot(roads.v, col=roads.v$JURISDICTI)
roads.v$JURISDICTI)
roads.v$JURISDICTI
names(roads.v)
roads.v$LANES
names(roads.v)
roads.v$SYSTEM
names(roads.v)
roads.v$OBJECTIVE_
plot(roads.v$OBJECTIVE_)
names(roads.v)
plot(roads.v$COMMENTS)
plot(roads.v$FUNCTIONAL)
a<-roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL"]
roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL"]
roads.v[,roads.v$FUNCTIONAL=="A - ARTERIAL"]
roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL",]
a<-roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL",]
plot(a)
arterial<-roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL",]
plot(roads.v$FUNCTIONAL)
arterial<-roads.v[roads.v$FUNCTIONAL=="A - ARTERIAL",]
collector<-roads.v[roads.v$FUNCTIONAL=="C - COLLECTOR",]
local<-roads.v[roads.v$FUNCTIONAL=="L - LOCAL",]
plot(arterial, col="red", lty=1, lw=2)
lines(collector, col="black", lty=2, lw=1)
lines(local, col="black", lty=3, lw=1)
names(local)
local$FUNCTIONAL
names(local)
local$JURISDICTI
PLOT(local$JURISDICTI)
plot(local$JURISDICTI)
_names
?names
